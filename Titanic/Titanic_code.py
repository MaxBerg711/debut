# -*- coding: utf-8 -*-
"""Титаник

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SDDgF4l1ubEqT9of7wu6Vj22lt0iaOQA
"""

#Import the libraries necessary for work
import pandas as pd
import numpy as np
from sklearn import tree
from sklearn.model_selection import train_test_split
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import precision_score
from sklearn.metrics import recall_score

#Load the training data set
train_data=pd.read_csv('/content/train.csv')

#Study the available data
train_data.info()
train_data.head()

#Transform the data to train the model and divide the data set into two subsamples
X=train_data.drop(['PassengerId','Survived','Name','Ticket','Cabin'], axis=1)
X=pd.get_dummies(X)
X=X.fillna({'Age': X.Age.median()})
Y=train_data.Survived

#Divide the training subsamples into training and test data sets
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.33, random_state = 42)

#Create a decision tree model
parametrs={'criterion':['gini', 'entropy'], 'max_depth': range(1, 30)}
clf=tree.DecisionTreeClassifier()
grid_search_cv_clf=GridSearchCV(clf, parametrs)
grid_search_cv_clf.fit(X_train, Y_train)
grid_search_cv_clf.best_params_
best_clf=grid_search_cv_clf.best_estimator_
best_clf.fit(X_train, Y_train)
best_clf.fit(X_test, Y_test)

#Testing the model
Y_pred_prob=best_clf.predict_proba(X_test)
Y_pred=np.where(Y_pred_prob[:, 1]>0.7, 1, 0)
precision_score(Y_test,Y_pred)

recall_score(Y_test,Y_pred)

#Load and transform the test data set
test_data=pd.read_csv('/content/test.csv')
X_new=test_data.drop(['PassengerId','Name','Ticket','Cabin'], axis=1)
X_new=pd.get_dummies(X_new)
X_new=X_new.fillna({'Age': X_new.Age.median(), 'Fare': X_new.Fare.median()})

#Use the developed model to predict an unknown feature
Y_new=best_clf.predict(X_new)
Y_new